<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
</HEAD>
<BODY>

<FONT SIZE=6>Упражнение 1. Простейшая программа</FONT>
<hr>
Операционная система MS Windows реализует графический интерфейс. Данное 
обстоятельство обозначает, что любая прикладная программа, выполняемая 
под Windows должна уметь хорошо рисовать. Для реализации данной возможности
DELPHI предоставляет удобного исполнителя: компонент <a href="../../graph/gr_canv.htm">TCanvas</a>.<br> 

Окно в DELPHI называется формой. Каждая форма имеет компонент TCanvas.
Поэтому поверхность формы может быть использована для рисования. Попробуем
написать программу, которая рисует в окне маску или рожицу.
Выполним следующие действия:<br>
<P>1) Запустим среду программирования DELPHI. При этом на экране отобразиться три окна<br>
пустая форма <img ALIGN=MIDDLE SRC="fr_form.gif">;<br>
окно инспектора объектов <img ALIGN=MIDDLE SRC="fr_insp.gif">;<br>
окно текстового редактора кода программы <img ALIGN=MIDDLE SRC="fr_edit.gif">.</P>
<P>2) Сохраним новый проект на диске. Для этого выполним команду меню<br>
<b>File\Save Project as</b><br>
Появится окно<br><img SRC="fr_save.gif"><br>
Так как каждая программа, подготовленная в DELPHI включает достаточно много 
вспомогательных файлов, то каждый новый проект необходимо сохранять в новом 
каталоге на диске. Для создания нового каталога перейдите в свой рабочий каталог
и щелкните по кнопке <img SRC="fr_dir.gif">. Задайте имя нового каталога как EXAMPLE. 
Затем перейдите во вновь созданный каталог и запишите в него проект под именем 
EXAMPLE. После записи в каталоге появилось 6 файлов (DELPHI 5):
<UL>
  <LI>EXAMPLE.PRJ - файл проекта;
  <LI>EXAMPLE.FRM и EXAMPLE.PAS - файлы описания свойств формы и кода формы;
  <LI>три вспомогательных файла: EXAMPLE.CFG, EXAMPLE.DOF и EXAMPLE.RES.
</UL>
Файлы с расширениями *.DPR, *.DFM и *.PAS являются основным. При перенесении 
на другую ЭВМ или при резервном копировании сохранение этих файлов обязательно.</P>

<P>3) Полученная заготовка программы может быть оттранслирована и запущена на
выполнение. Для этого можно использовать три альтернативных способа:
<UL>
 <LI>нажать "горячую клавишу" <b>F9</b>;
 <LI>выполнить команду меню <b>Run\Run</b>;
 <LI>воспользоваться кнопкой <img SRC="fr_run.gif">. 
</UL>
В результате в каталоге с исходным кодом появится выполняемый файл EXAMPLE.EXE 
размером 292864 Кбайта (для DELPHI 5). Полученная программа реализует пустое 
окно, полностью поддерживающее оконный интерфейс Windows.</P>

<P>4) Выполним настройку свойств формы.
Зададим размер канвы для рисования. Для этого с помощью окна инспектора 
объектов определим следующие свойства формы:
<UL>
 <LI>свойству <b>ClientHeight</b> (высота внутренней части формы, доступной для рисования) 
     присвоим значение 400;
 <LI>свойству <b>ClientWidth</b> (ширина внутренней части формы, доступной для рисования) 
     присвоим значение 300;
</UL>
Обратите внимание, что полная высота и ширина формы (свойство <b>Height</b> и <b>Width</b>) 
приняли значения больше доступной программисту области, так как включают 
высоту заголовка и ширину рамки окна.<br>
Чтобы окно после запуска программы располагалась в центре экрана присвоим
свойству <b>Position</b> значение <b>poScreenCenter</b>.<br>
Свойство <b>Caption</b> содержит текст заголовка окна. Присвоим ему значение 
<b>Рисуем маску</b>.<br>
Сохраним введенные свойства. Для этого следует выполнить команду
<b>File\Save</b> или нажать кнопку <img SRC="fr_disk.gif">.</P>

<img SRC="ris1.gif" align=left>
<P>5) Выполним рисование маски. Все что связано с отрисовкой формы должно
выполнятся при обработке события <b>OnPaint</b>. Для создания обработчика
данного события перейдем на страничку <b>Events</b> (События) инспектора объектов и 
дважды щелкнем на событии <b>OnPaint</b>. В окне текстового редакторе появится 
заготовка процецедуры обработки события <b>OnPaint</b><br>
<PRE><FONT NAME=Courier New COLOR=BLUE>
<b>procedure</b> TForm1.FormPaint(Sender: TObject);
<b>begin</b>

<b>end</b>;
</FONT></PRE>
Код программы рисования маски необходимо размещать между операторными скобками
<b>begin</b> <b>end</b> обработчика <b>OnPaint</b>.</P>
<hr>
<FONT COLOR=RED><b>ЗАПОМНИ!</b><br>
Весь код, связанный с отрисовкой графических изображений на форме во время 
выполнения программы, необходимо размещать в обработчике события <b>OnPaint</b>.
</FONT>
<hr>

<P>6) Запишем код программы, связанный с рисованием маски. Для рисования 
используем компонент <b>Canvas</b>.
<PRE><FONT COLOR=BLUE>
<b>procedure</b> TForm1.FormPaint(Sender: TObject);
<b>begin</b>
     // рисуем овал маски
   Canvas.Pen.Style:=psSolid;     <FONT COLOR=RED>// стиль пера - сплошная линия</FONT>
   Canvas.Pen.Color:=clBlack;     <FONT COLOR=RED>// цвет пера</FONT>
   Canvas.Pen.Width:=3;           <FONT COLOR=RED>// толщина пера</FONT>
   Canvas.Brush.Style:=bsSolid;   <FONT COLOR=RED>// стиль кисти - сплошная заливка</FONT>
   Canvas.Brush.Color:=clBlue;    <FONT COLOR=RED>// цвет кисти</FONT>
   Canvas.Ellipse(50,50,250,350); <FONT COLOR=RED>// сам овал (вся канва 301 на 401 точку)</FONT>
<b>end</b>;
</FONT></PRE>
Выполним сохранение программы на диске и запустим ее на выполнение. Увидим, что
в окне программы появится овал, вытянутый вертикально. При перемещении или 
изменении размеров окна отвал будет восстанавливаться. Анализируя код программы
рисования, можно отметить, что идентификатор <b>Canvas</b> встречается в
каждой строчке кода. Данное обстоятельство делает код неудобным для анализа,
менее понятным. Язык Паскаль для работы с подобными структурами предоставляет 
удобный вспомогательный оператор<br>
<b>with</b> &lt;имя структуры&gt; <b>do</b> &lt;составной оператор&gt;.<br>
С использованием данного оператора записанный выше код можно представить
следующим образом
<PRE><FONT COLOR=BLUE>
<b>procedure</b> TForm1.FormPaint(Sender: TObject);
<b>begin</b>
   <b>with</b> Canvas <b>do</b>   <FONT COLOR=RED>// рисуем контур маски</FONT>
    <b>begin</b> Pen.Style:=psSolid;     <FONT COLOR=RED>// стиль пера - сплошная линия</FONT>
      Pen.Color:=clBlack;     <FONT COLOR=RED>// цвет пера</FONT>
      Pen.Width:=3;           <FONT COLOR=RED>// толщина пера</FONT>
      Brush.Style:=bsSolid;   <FONT COLOR=RED>// стиль кисти - сплошная заливка</FONT>
      Brush.Color:=clBlue;    <FONT COLOR=RED>// цвет кисти</FONT>
      Ellipse(50,50,250,350); <FONT COLOR=RED>// сам контур (вся канва 301 на 401 точку)</FONT>
    <b>end</b>;
   <b>with</b> Canvas <b>do</b>  <FONT COLOR=RED>// рисуем левый и правый глаз</FONT>
    <b>begin</b> 
      Brush.Color:=clRed;       
      Ellipse(100,100,125,200); <FONT COLOR=RED>// левый глаз</FONT>
      Ellipse(175,100,200,200); <FONT COLOR=RED>// правый глаз</FONT>
      Brush.Color:=clBlack;     
      Ellipse(105,150,120,175); <FONT COLOR=RED>// зрачок левого глаза</FONT>
      Ellipse(180,150,195,175); <FONT COLOR=RED>// зрачок правого глаза</FONT>
    <b>end</b>;
   <b>with</b> Canvas <b>do</b>  <FONT COLOR=RED>// рисуем рот</FONT>
    <b>begin</b> 
      Brush.Color:=clGreen;     <FONT COLOR=RED>// цвет кисти</FONT>
      Rectangle(100,275,200,285); <FONT COLOR=RED>// рот</FONT>
    <b>end</b>;
   <b>with</b> Canvas <b>do</b>  <FONT COLOR=RED>// рисуем нос</FONT>
    <b>begin</b> 
      Brush.Color:=clGreen;     <FONT COLOR=RED>// цвет кисти</FONT>
      Rectangle(145,100,155,265); <FONT COLOR=RED>// рот</FONT>
    <b>end</b>;
<b>end</b>;
</FONT></PRE>
</P>
<hr>
<CENTER><FONT FACE="Wingdings" size=6>&#70;</FONT>
<a href="Maska.exe">Пример выполняемой программы</a>
<FONT FACE="Wingdings" size=6>&#69;</FONT></CENTER>
<hr>
<a href="../upr.htm"><i>вернуться к оглавлению</i></a><br>  

</BODY>
</HTML>
