<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
</HEAD>
<BODY>

<FONT SIZE=6>Упражнение 8. Ввод-вывод текстовых данных</FONT>
<hr>
Для операций вывода на форму текстовых данных можно использовать компоненты,
имеющие свойство <b>Caption</b> или <b>Text</b>. К таковым относятся:
<UL>
 <LI>компонент <b>TLabel</b> - вывод отдельной строки текста (значение выводимой
     строки должно быть присвоено свойству <b>Caption</b>, с помощью
     свойства <b>Font</b> можно настроить параметры шрифта);
 <LI>компонент <b>TPanel</b> - аналогичен <b>TLabel</b>, но позволяет 
     выводить текст в рамке; 
 <LI>компонент <b>TMemo</b> - позволяет выводить достаточно большой объем 
     текста, содержащийся в свойстве <b>Lines</b>, может включать полосы 
     прокрутки текста в окне (свойство <b>ScrollBars</b>) 
</UL>
Для вывода числовых данных необходимо вначале выполнить их преобразование 
в строку текста. В простейшем случае для преобразования можно использовать
функцию <b>IntToStr</b> для целых чисел и функцию <b>FloatToStr</b> для
вещественных чисел.<br><br>
<u>Пример 1</u>
<PRE><FONT COLOR=BLUE>
  <b>var</b> a : byte;   b : single;
      . . .
  Label1.Caption:=IntToStr(a);
  Label2.Caption:=FloatToStr(b);
</FONT></PRE>

Для операций ввода строки текстовых данных можно использовать компонент <b>TEdit</b>. 
Перед использованием введенных числовых данных необходимо вначале выполнить 
их преобразование из строки текста в число. В простейшем случае для 
преобразования можно использовать функцию <b>StrToInt</b> для целых чисел и 
функцию <b>StrToFloat</b> для вещественных чисел.<br><br>

<u>Пример 2</u>
<PRE><FONT COLOR=BLUE>
  <b>var</b> a : byte;   b : single;
      . . .
  Edit1.Text:=IntToStr(a);   Edit2.Caption:=FloatToStr(b);
      . . .
  a:=StrToInt(Edit1.Text);   b:=StrToFloat(Edit2.Text);
</FONT></PRE>

<u>Пример 3</u>  Простейший калькулятор<br>

<P><img SRC="fr_calk.gif" ALIGN=LEFT>
Начните новый проект и сохраните его в созданном для этого проекта каталоге.
Пусть калькулятор подобен стандартному калькулятору Windows, но выполняет 
только четыре арифметических действия: сложение, вычитание, умножение и
деление. Для ввода чисел используем единственное поле ввода. Результат
будем выводить в это же поле. Выполним следующие действия.</P>

<P>1) Поместим на поле формы компонент <b>TEdit</b> и 5 кнопок <b>TSpeedButtom</b>.
Свойству <b>Caption</b> формы присвоим значение <b>Калькулятор</b>.
Свойству <b>Text</b> компонента <b>Edit1</b> присвоим значение 0.
Свойствам <b>Caption</b> кнопок присвоим символы арифметических действий 
[<b>+</b>], [<b>-</b>], [<b>*</b>], [<b>/</b>] и [<b>=</b>].</P>

<P>2) В разделе <b>public</b> класса TForm1 введем три вспомогательные 
переменныне
<PRE><FONT COLOR=BLUE>
<b>type</b>
  TForm1 = <b>class</b>(TForm)
    Edit1: TEdit;
    SB_Plus: TSpeedButton;
    SB_Minus: TSpeedButton;
    SB_Umnog: TSpeedButton;
    SB_Delen: TSpeedButton;
    SB_EQ: TSpeedButton;
  <b>private</b>
    { Private declarations }
  <b>public</b>
    { Public declarations }
    a,b : Extended; <FONT COLOR=GREEN>// переменные для значений операндов</FONT>
    oper : byte;    <FONT COLOR=GREEN>// признак выполняемой операции</FONT>
  <b>end;</b>
</FONT></PRE></P>

<P>3) Реализуем операцию сложения. Для этого представим, что выполняет
обычный калькулятор при нажатии кнопок, связанных с данной операцией.
<UL>
  <LI>в поле ввода <b>Edit1</b> вводится значение 1-ого слагаемого;
  <LI>нажимается кнопка [<b>+</b>], при этом введенное значение 1-ого слагаемого
      сохраняется в переменной <b>a</b>, в переменной <b>oper</b> запоминается
      код выполняемой операции (наример, примем код для сложения равным 1, для вычитания - 2,
      для умножения - 3, для деления - 4), 
      поле ввода обнуляется и делается активным, т.е. ему передается фокус
      ввода;
  <LI>в поле ввода <b>Edit1</b> вводится значение 2-ого слагаемого;
  <LI>нажимается кнопка [<b>=</b>], при этом введенное значение 2-ого слагаемого
      сохраняется в переменной <b>b</b>, в зависимости от значения переменной 
      <b>oper</b> выполняется та или иная операция и ее результат присваивается
      полю ввода, значение переменной <b>oper</b> сбрасывается, чтобы исключить
      повторное случайное выполнение данной операции.
</UL>
Для реализации данных действий необходимо написать обработчики событий клавиш
[<b>+</b>] и [<b>=</b>]. Щелкнем мышью по кнопке [<b>+</b>]. В окне редактора появится
заготовка процедуры обработки данного события. Запишем для него следующий код.
<PRE><FONT COLOR=BLUE>
<b>procedure</b> TForm1.SB_PlusClick(Sender: TObject);
<b>begin</b>
  a:=StrToFloat(Edit1.Text); <FONT COLOR=GREEN>// запоминаем значение 1-ого слагаемого</FONT>
  oper:=1;                   <FONT COLOR=GREEN>// запоминаем код операции</FONT>
  Edit1.Text:='0';           <FONT COLOR=GREEN>// обнуляем поле ввода</FONT>
  Edit1.SetFocus;            <FONT COLOR=GREEN>// устанавливаем фокус ввода</FONT>
<b>end</b>;
</FONT></PRE>
Щелкнем мышью по кнопке [<b>=</b>]. Запишем для обработчика этого события 
следующий код.
<PRE><FONT COLOR=BLUE>
<b>procedure</b> TForm1.SB_PlusClick(Sender: TObject);
<b>begin</b>
  b:=StrToFloat(Edit1.Text);  <FONT COLOR=GREEN>// запоминаем значение 1-ого слагаемого</FONT>
  case oper of                <FONT COLOR=GREEN>// выполняем действие</FONT>
  1:Edit1.Text:=FloatToStr(a+b);
  2:Edit1.Text:=FloatToStr(a-b);
  3:Edit1.Text:=FloatToStr(a*b);
  4:Edit1.Text:=FloatToStr(a/b);
  end;
  oper:=0;                   <FONT COLOR=GREEN>// сбрасываем код операции</FONT>
<b>end</b>;
</FONT></PRE>
Приведенный обработчик кнопки [<b>=</b>] записан сразу для всех 4-х действий. 
Сохраните проект и запустите его на выполнение. Проверте правильность работы 
калькулятора на операции сложения.</P>

<P>4) Реализуйте обработчики нажатия для остальных трех кнопок [<b>-</b>], 
[<b>*</b>] и [<b>/</b>]. Код для них аналогичен коду клавиши [<b>+</b>], 
отличаясь только значением кода операции.
</P>

<img SRC="../../PIC/zadan.gif" ALIGN=LEFT>
 <FONT SIZE=6><u><i>Задание для самостоятельного выполнения</i></u></FONT><br>

<P>Разработать программу, реализующую полностью стандартный калькулятор Windows.</P>
<i>Примечание</i><br>
<TABLE BORDER=1 WIDTH=100%><TR><TD>
Калькулятор должен поддерживать как задание цифр вводимого числа с клавиатуры, 
так и с помощью кнопок с цифрами, имитируя реальный калькулятор. Обработчик
нажатия кнопки с цифрой [<b>1</b>] может выглядеть следующим образом
<PRE><FONT COLOR=BLUE>
<b>procedure</b> TForm1.SB_1Click(Sender: TObject);
<b>begin</b>
  <b>if</b> Edit1.Text='0' <b>then</b>     <FONT COLOR=GREEN>// если число еще не вводилось</FONT>
           Edit1.Text='1'    <FONT COLOR=GREEN>// то в строку редактирования заносится 1</FONT>
                    <b>else</b>     <FONT COLOR=GREEN>// иначе</FONT>
           Edit1.Text=Edit1.Text+'1'; <FONT COLOR=GREEN>// справа добавляется 1</FONT>
  Edit1.SetFocus;     <FONT COLOR=GREEN>// устанавливаем фокус ввода для ввода с клавиатуры</FONT>
<b>end</b>;
</FONT></PRE>
Аналогично строятся обработчики для ввода остальных цифр.</TD></TR></TABLE>

<hr>

<a href="../upr.htm"><i>вернуться к оглавлению</i></a><br>  

</BODY>
</HTML>
