<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
</HEAD>
<BODY>

<FONT SIZE=6>Упражнение 9. Ввод-вывод массивов</FONT>
<hr>

<P>Наиболее подходящим компонентом для организации операций ввода-вывода элементов 
массива является компонент <a href="../../vc/vc_strgr.htm"><i>TStringGrid</i></a>.
Поясним использование данного компонента на примерах.</P>

<i><u>Пример 1</u></i>.<br>
Требуется написать программу, вычисляющую определитель матрицы 3 на 3.<br>
Выполните следующие действия:<br>
<OL>
  <LI>Начните новый проект. Пустой форме присвойте имя <i>fmDeterm</i>.
      Сохраните проект под названием <i>Determ</i>, присвоив файлу модуля
      формы имя <i>unDeterm</i>.
  <LI>Свойству <i>Caption</i> формы присвойте значение <i>Вычисление определителя матрицы</i>.<br>
      Свойству <i>Position</i> формы присвойте значение <i>psScreenCenter</i> - расположить в центре экрана.
  <LI>Поместите на форму экземпляр компонента <i>TStringGrid</i>. Свойства данного компонента
      определите следующим образом:
      <PRE><FONT COLOR=NAVY>
      <i>Name</i> = <i>MS</i>;
      <i>ColCount</i> = 4;          <i>RowCount</i> = 4;
      <i>DefaulRowHeight</i> = 17;  <i>Options.goEditing</i> = True;
      <i>Left</i> = 8;              <i>Top</i> = 8;
      <i>Height</i> = 85;           <i>Width</i> = 285.</FONT></PRE>
  <LI>Поместите на форму экземпляр кнопки <i>TSpeedButtom</i> и метки <i>TLabel</i>.
      Полю <i>Name</i> метки присвойте значение <i>LDet</i>. Полю <i>Name</i>
      кнопки присвойте значение <i>Run</i>.
  <LI>В тексте модуля формы в разделе <i>interface</i> в части <i>public</i> описания формы 
      добавте описание двумерного массива<br>
      <FONT COLOR=BLUE>
      a : <b>array</b> [1..3,1..3] <b>of</b> single;
      </FONT>
  <LI>Для формы создайте обработчик события <i>OnCreate</i>
      <PRE> <FONT COLOR=BLUE>
      <b>procedure</b> TfmDeterm.FormCreate(Sender: TObject);
      <b>var</b> i,j : word;
      <b>begin</b>
           <b>for</b> i:=1 <b>to</b> 3 <b>do</b>
            <b>begin</b>
             MS.Cells[0,i]:=IntToStr(i);
             MS.Cells[i,0]:=IntToStr(i);
             <b>for</b> j:=1 <b>to</b> 3 <b>do</b>
              <b>begin</b>
               a[i,j]:=0;     <FONT COLOR=GREEN>//<i>обнуляем матрицу</i></FONT>
               MS.Cells[i,j]:=FloatToStr(a[i,j]); <FONT COLOR=GREEN>//<i>определяем таблицу</i></FONT>
              <b>end</b>;
            <b>end</b>;
            LDet.Caption:='0';
      <b>end</b>; </FONT>
      </PRE>
  <LI>Создайте обработчик нажатия кнопки <i>Run</i>:
      <PRE> <FONT COLOR=BLUE>
      <b>procedure</b> TfmDeterm.RunClick(Sender: TObject);
      <b>var</b> i,j : word;   d : single;
      <b>begin</b>
           <b>for</b> i:=1 <b>to</b> 3 <b>do</b> <FONT COLOR=GREEN>//<i>определяем матрицу а</i></FONT>
             <b>for</b> j:=1 <b>to</b> 3 <b>do</b>
               a[i,j]:=StrToFloat(MS.Cells[i,j]);
               <FONT COLOR=GREEN>// вычисляем определитель</FONT>
            d:=a[1,1]*a[2,2]*a[3,3]+a[1,2]*a[2,3]*a[3,1]+a[1,3]*a[2,1]*a[3,2]-
               a[3,1]*a[2,2]*a[1,3]-a[3,2]*a[2,3]*a[1,1]-a[3,3]*a[2,1]*a[1,2];
            LDet.Caption:=FloatToStr(d);
      <b>end</b>; </FONT>
      </PRE>
</OL>
Приложение готово. Запустите его и проверте правильность работы программы на
следующих тестовых примерах:
<OL>
  <LI>все элементы матрицы равны 0 ==&gt; определитель равен 0;
  <LI><PRE>
  | 1 0 0 |
  | 0 1 0 |  ==&gt; определитель равен 1;
  | 0 0 1 |</PRE>
  <LI><PRE>
  | 1 1 1 |
  | 1 1 1 |  ==&gt; определитель равен 0;
  | 1 1 1 |</PRE>
  <LI><PRE>
  | 3 2 1 |
  | 2 3 2 |  ==&gt; определитель равен 27+4+4-3-12-12=8;
  | 1 2 3 |</PRE>
</OL>

<i><u>Пример 2</u></i>.<br>
Имеется одномерный массив, состоящий из N элементов (N&lt;=100). Массив
случайным образом заполнен символами. Требуется написать программу,
выполняющую сортировку символов по алфавиту.<br>
Выполните следующие действия:<br>
<OL>
  <LI>Начните новый проект. Пустой форме присвойте имя <i>fmSortCh</i>.
      Сохраните проект под названием <i>SortCh</i>, присвоив файлу модуля
      формы имя <i>unSortCh</i>.
  <LI>Свойству <i>Caption</i> формы присвойте значение <i>Сортировка массива</i>.<br>
      Свойству <i>Position</i> формы присвойте значение <i>psScreenCenter</i> - расположить в центре экрана.
  <LI>Поместите на форму экземпляр компонента <i>TStringGrid</i>. Свойства данного компонента
      определите следующим образом:
      <PRE><FONT COLOR=NAVY>
      <i>Name</i> = <i>MS</i>;             <i>Options.goEditing</i> = True;
      <i>ColCount</i> = 50;         <i>RowCount</i> = 1;
      <i>FixedCols</i> = 0;         <i>FixedRows</i> = 0;
      <i>DefaulColWidth</i> = 25;   <i>DefaulRowHeight</i> = 17;
      <i>Left</i> = 8;              <i>Top</i> = 8;
      <i>Height</i> = 45;           <i>Width</i> = 505.</FONT></PRE>
  <LI>Поместите на форму экземпляр кнопки <i>TSpeedButtom</i> со следующими значениями свойств:<br>
      <FONT COLOR=NAVY>
      <i>Name</i> := <i>sbRandom</i>;<br>
      <i>Caption</i> := <i>RANDOM</i>.</FONT><br>
      Кнопка предназначена для генерации случайного распределения символов по элементам массива.
      Создайте обработчик нажатия данной кнопки в следующем виде:
      <PRE> <FONT COLOR=BLUE>
      <b>procedure</b> TfmSortCh.sbRandomClick(Sender: TObject);
      <b>var</b> i : word;   
      <b>begin</b>
           <b>for</b> i:=1 <b>to</b> MS.ColCount <b>do</b> 
               MS.Cells[i-1,0]:=Chr(32+Random(224));
      <b>end</b>; </FONT></PRE>
      Данный код генерирует случайные символы с кодами от 32 до 255 (символы
      с кодами от 0 до 31 являются неотображаемыми; функция <i>Random(M)</i>
      генерирует целое случайное число в интервале от 0 до M-1.
  <LI>Для формы создайте обработчик события <i>OnCreate</i>
      <PRE> <FONT COLOR=BLUE>
      <b>procedure</b> TfmSortCh.FormCreate(Sender: TObject);
      <b>begin</b>
           sbRandomClick(Sender);
      <b>end</b>; </FONT></PRE>
      Данный обработчик выполняет начальное заполнение таблицы случайными символами в момент создания формы.
  <LI>Поместите на форму экземпляр метки <i>TLabel</i> со следующими значениями свойств:<br>
      <FONT COLOR=NAVY>
      <i>Name</i> := <i>lbN</i>;<br>
      <i>Caption</i> := <i>Число элементов массива</i>.</FONT>
  <LI>Правее метки <i>lbN</i> поместите на форму экземпляр <i>TSpinEdit</i> (в Lazarus находится на странице Misc)со следующими значениями свойств:<br>
      <FONT COLOR=NAVY>
      <i>Name</i> := <i>seN</i>;<br>
      <i>Value</i> := 50;<br>
      <i>MinValue</i> := 10;<br>
      <i>MaxValue</i> := 100.<br></FONT>
      Поле <i>seN</i> позволит изменять число элементов массива в интервале от 10 до 100.
      Для этого опишите обработчик события <i>OnChange</i> данного компонента:
      <PRE> <FONT COLOR=BLUE>
      <b>procedure</b> TfmSortCh.seNChange(Sender: TObject);
      <b>begin</b>
           MS.ColCount:=seN.Value;
           sbRandomClick(Sender);
      <b>end</b>; </FONT></PRE>
      Фактически обработчик переустанавливает число колонок таблицы и генерирует
      новое случайное распределение символов.
  <LI>Поместите на форму еще один экземпляр кнопки <i>TSpeedButtom</i> со следующими значениями свойств:<br>
      <FONT NAME=Courier New COLOR=NAVY>
      <i>Name</i> := <i>sbSort</i>;<br>
      <i>Caption</i> := <i>Сортировка</i>.</FONT><br>
      Кнопка предназначена для выполнения сортировки массива символов.
      Создайте обработчик нажатия данной кнопки в следующем виде:
      <PRE> <FONT COLOR=BLUE>
      <b>procedure</b> TfmSortCh.sbSortClick(Sender: TObject);
      <b>var</b> i,j,k : word;   s : string;
      <b>begin</b>
           <b>for</b> i:=1 <b>to</b> MS.ColCount-1 <b>do</b> <FONT COLOR=GREEN>// сортировка методом пузырька</FONT>
             <b>begin</b> k:=i; s:=MS.Cells[i,0];
               <b>for</b> j:=i+1 <b>to</b> MS.ColCount-1 <b>do</b> 
                 <b>if</b> MS.Cells[j,0] < s <b>then</b>
                    <b>begin</b>
                       s:=MS.Cells[j,0]; k:=j;
                    <b>end</b>;
               if k<>i <b>then</b>
                 <b>begin</b>
                    MS.Cells[k,0]:=MS.Cells[i,0];
                    MS.Cells[i,0]:=s;
                 <b>end</b>;
             <b>end</b>;
      <b>end</b>; </FONT></PRE>
</OL>
Приложение готово. Запустите его и проверте правильность работы программы.<br><br>

<img SRC="../../PIC/zadan.gif" ALIGN=LEFT>
 <FONT SIZE=6><u><i>Задание для самостоятельного выполнения</i></u></FONT><br>
<OL>
 <LI>Квадратная матрица с рангом от 2 до 100 заполнена случайными целыми
     числами в интервале от 0 до 1000. Разработать программу, определяющую<br> 
     <OL>
       <LI>максимальное и минимальное значение элементов массива;
       <LI>максимальное и минимальное значение в строках массива;
       <LI>максимальное и минимальное значение в столбцах массива;
       <LI>максимальное и минимальное значение по главной диагонали массива;
       <LI>сумму всех элементов массива;
       <LI>сумму элементов в строках массива;
       <LI>сумму элементов в столбцах массива;
       <LI>сумму элементов по главной диагонали массива;
       <LI>среднее арифметическое значение всех элементов массива;
       <LI>среднее арифметическое значение в строках массива;
       <LI>среднее арифметическое значение в столбцах массива;
       <LI>среднее арифметическое значение по главной диагонали массива;
       <LI>среднеквадратическое отклонение значений всех элементов массива;
       <LI>среднеквадратическое отклонение значений в строках массива;
       <LI>среднеквадратическое отклонение значений в столбцах массива;
       <LI>среднеквадратическое отклонение значений по главной диагонали массива.
     </OL>
     Среднее арифметическое значение: <IMG SRC="tp_arr6.gif" ALIGN=MIDDLE WIDTH=108 HEIGHT=52><br>
     Среднеквадратическое отклонение: <IMG SRC="tp_arr7.gif" ALIGN=MIDDLE WIDTH=181 HEIGHT=52>
 <LI>Квадратная матрица с рангом от 2 до 100 заполнена случайными целыми
     числами в интервале от 0 до 1000. Разработать программу,<br> 
     <OL>
       <LI>сортирующую каждую строку матрицы по возрастанию;
       <LI>сортирующую каждый столбец матрицы по убыванию;
       <LI>сортирующую каждую диагональ слева-направо-сверху-вниз матрицы по убыванию;
       <LI>сортирующую строки матрицы по возрастанию среднего значения строки;
       <LI>сортирующую столбцы матрицы по убыванию максимального значения в столбце;
       <LI>сортирующую элементы матрицы по возрастанию по спирали, начинающейся в левом верхнем углу и сужающейся к центру матрицы;
       <LI>сортирующую элементы матрицы по убыванию по змейке, начинающейся в левом верхнем углу и двигающейся по нечетным столбцам вниз, а по четным - вверх;
       <LI>сортирующую элементы матрицы по возрастанию по спирали, начинающейся в центре матрицы и расходящейся против часовой стрелки к краям матрицы;
     </OL>
 <LI>Квадратная матрица с рангом от 2 до 10 заполнена случайными целыми
     числами в интервале от 0 до 100. Разработать программу,<br>
     <OL>
       <LI>вычисляющую определитель матрицы;
       <LI>вычисляющую обратную матрицу;
     </OL>
 <LI>Имеется система 3-х уравнений. Разработать программу решения системы уравнений.
 <LI>Имеется система N уравнений (3 &lt; N &lt;= 100). Разработать программу решения системы уравнений.
     Построить таблицу значений времени решения системы уравнений в зависимости от числа уравнений N.
</OL>

<hr><a href="../upr.htm"><i>вернуться к оглавлению</i></a><br>  

</BODY>
</HTML>
